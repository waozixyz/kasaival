name: nim raylib build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the codebase.
    - name: Checkout
      uses: actions/checkout@v2

    # Setup the environment for Linux.
    - name: Setup Linux Build Environment
      uses: nim-lang/setup-nim@master
      with:
        nim-version: '1.4.2' # The version of Nim you want to use.

    # Install raylib and naylib.
    - name: Install Raylib and Naylib
      run: sudo apt-get install -y libsdl2-dev libsdl2-mixer-dev libopenal-dev libphysfs-dev liblua5.3-dev libfreetype6-dev zlib1g-dev
           sudo apt install libasound2-dev mesa-common-dev libx11-dev libxrandr-dev libxi-dev xorg-dev libgl1-mesa-dev libglu1-mesa-dev
           nimble install naylib

    # Build the desktop version.
    - name: Build desktop version
      run: nim c -d:release src/main.nim


    # Create a releases folder and move desktop output there.
    - name: Create desktop output directory and move binaries
      run: |
        mkdir -p releases/desktop
        mv main releases/desktop/

    # Create a web output in the "public" folder and move it to "releases" folder.
    - name: Create web output directory
      run: |
        mkdir -p ../public/

    # Create a web release folder and move zip content.
    - name: Create desktop output directory and move binaries
      run: |
        mkdir -p releases/web
        cd releases/web
        zip ./release.zip ../../../public/*

    # Build the web version using emscripten.
    - name: Build web version
      run: nim c -d:release -d:emscripten src/main.nim

     # Upload desktop and web artifacts to Github.
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Desktop Output
        path: releases/desktop/

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Web Output
        path: releases/web/release.zip
